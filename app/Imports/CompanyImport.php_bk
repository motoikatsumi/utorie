<?php

namespace App\Imports;

use App\Models\Company;
use App\Models\CompanyGenre;
use App\Models\AreaCompany;
use App\Models\RelatedCompany;
use App\Models\StickingCompany;
use App\Models\CompanyPref;
use Maatwebsite\Excel\Concerns\ToModel;
use Maatwebsite\Excel\Concerns\WithHeadingRow;

class CompanyImport implements ToModel, WithHeadingRow
{
    /**
     * @param array $row
     *
     * @return \Illuminate\Database\Eloquent\Model|null
     */

    public function model(array $row)
    {
        $company = Company::where('id', $row['id'])->first();
        $row = array_change_key_case($row, CASE_LOWER);
        if (!empty($company)) {
            if ($row['delete_flg'] === null) $row['delete_flg'] = 0;
            $company->fill($row);
        } else {
            $company = new Company;
            $company->fill($row);
            $company->display_priority = empty($row['display_priority']) ? 0 : $row['display_priority'];
            $company->display_flg = $row['display_flg'] == 'è¡¨ç¤º' ? 1 : 0;
            $company->index = $row['index'] == 'no' ? 0 : 1;
            $company->star_review = empty($row['star_review']) ? 0 : $row['star_review'];
            $company->delete_flg = empty($row['delete_flg']) ? 0 : $row['delete_flg'];
        }
        $company->save();
        $this->syncCompanyRelationships($row, $company);
    }

    private function syncCompanyRelationships($row, $company)
    {
        if (!empty($row['area'])) {
            $area = explode('-', $row['area']);
            foreach ($area as $key => $item) {
                if ($item != 0)
                    $area = AreaCompany::create([
                        'company_id' => $company->id,
                        'area_id' => (int)$item
                    ]);
            }
        }
        if (!empty($row['genre'])) {
            $genre = explode('-', $row['genre']);
            foreach ($genre as $key => $item) {
                if ($item != 0)
                    $genre = CompanyGenre::create([
                        'company_id' => $company->id,
                        'genre_id' => (int)$item
                    ]);
            }
        }
        if (!empty($row['pref'])) {
            $pref = explode('-', $row['pref']);
            foreach ($pref as $key => $item) {
                if ($item != 0)
                    $pref = CompanyPref::create([
                        'company_id' => $company->id,
                        'pref_id' => (int)$item
                    ]);
            }
        }
        if (!empty($row['related'])) {
            $related = explode('-', $row['related']);
            foreach ($related as $key => $item) {
                if ($item != 0)
                    $related = RelatedCompany::create([
                        'company_id' => $company->id,
                        'pref_id' => (int)$item
                    ]);
            }
        }
        if (!empty($row['sticking_point'])) {
            $sticking_point = explode('-', $row['sticking_point']);
            foreach ($sticking_point as $key => $item) {
                if ($item != 0)
                    $sticking_point = StickingCompany::create([
                        'company_id' => $company->id,
                        'sticking_id' => (int)$item
                    ]);
            }
        }
    }
}
